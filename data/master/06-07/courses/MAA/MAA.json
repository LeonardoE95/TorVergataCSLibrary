{
  "nomeCorso": "Metodi algoritmici di approssimazione",
  "docente": "Andrea Clementi",
  "annoAccademico": "2006-2007",
  "crediti": "6",
  "settore": "",
  "anno": "1",
  "semestre": "1",
  "propedeuticit\u00e0": "Nessuna",
  "comunicazioni": [],
  "lezioni": [],
  "materiale": [],
  "programma": "Obiettivi del corso\r\n\r\nIl corso ha l'obiettivo di introdurre le metodologie fondamentali per il progetto di algoritmi di approssimazione per problemi computazionalmente difficili.\r\n\r\nArgomenti trattati\r\n\r\nProblemi computazionalemente difficili: le classi P e NP. Problemi di ottimizzazione. Complessita' dei problemi di ottimizzazione. Algoritmi di approssimazione e classi di approssimabilita'. Riduzioni polinomiali che preservano l'approssimabilita'. Separazione delle classi di approssimabilita'.  Tecniche fondamentali per algoritmi di approssimazione: algoritmi greedy, algoritmi sequenziali, ricerca locale, programmazione dinamica\r\n\r\nLezioni svolte\nIntroduzione: Un primo problema di ottimizzazione il Minimum Vertex Cover. Un algoritmo greedy 2-approssimante. Riduzioni polinomiali tra problemi decisionali.\nLa classe NP e i problemi NP completi. Il problema decisionale associato a Minimum Vertex Cover e' NP-Completo. Altri problemi NP-Completi (Clique, Independent Set)\nProblemi di ottimizzazione. La classe NPO dei problemi di ottimizzazione il cui corrispondente decisionale e' in NP. La classe PO dei problemi di ottimizzazione che ammettono algoritmi polinomiali ottimi. PO=NPO implica P=NP.\nTecniche algoritmiche per la soluzione approssimata di problemi di ottimizzazione con corrispondente decisionale NP-Completo.\nTecnica Greedy: Un algorimo d+1 approssimato per Max Independent Set per grafi di densita' d; il problema del commesso viaggiatore e sua NP-hardness per mezzo di una riduzione dal problema del circuito Hamiltoniano, l'algoritmo nearest-neighbor log(n) approssimante per istanze metriche.\nAlgoritmi sequenziali per bin packing: algoritmo Next Fit e First Fit Decreasing' Lower bounds.\nAlgoritmi basati su programmazione lineare: Algoritmo per Weighted Vertex Cover basato su arrotondamento.\nProgrammazione dinamica: Algoritmo pseudo-polinomiale per il problema della bisaccia (Maximum Knapsack), utilizzo di tale algoritmo per la costruzione di uno schema di approssimazione.\n\nClassi di approssimazione: algoritmi approssimanti, stima della prestazioni degli algoritmi approssimanti (errore assoluto, errore relativo, performance ratio), tecnica del gap per dimostrare risultati di non approssimabilita':\r\nLa classe APX: algoritmo 2-approssimante per Max Satisfiability, Min TSP non e' in APX (a meno che P=NP), algoritmo 1.5-approssimante per Min TSP Metrico (Christofides).\nLa classe PTAS: Schemi di approssimazione polinomiali; uno schema di approssimazione polinomiale per Maximum Integer Knapsack; Minimum Bin Packing non e' in PTAS (a meno che P=NP).\nLa classe FPTAS: Schemi di approssimazione completamente polinomiali;  Maximum Knapsack e' in FPTAS; I problemi di ottimizzazione NP-hard polinomialmente limitati non appartengono a FPTAS (a meno che P=NP); Problemi pseudo-polinomiali; Relazione tra problemi in FPTAS e problemi pseudo-polinomiali; I problemi fortemente NP-hard non sono pseudo-polinomiali (a meno che P=NP).\nRiduzioni polinomiali che preservano l'approssimazione: AP-Riduzione ed L-Riduzione. Completezza nelle classi di approssimazione; Problemi NPO-Completi; Problemi APX-Completi (Max 3-Sat, Max 2-Sat);",
  "testiRiferimento": "Ausiello, Crescenzi, Gambosi, Kann, Marchetti-Spaccamela, Protasi. Complexity and Approximation. Springer, 1999.\r\n\r\nBovet, Crescenzi. Introduction to the Theory of Complexity. Prentice Hall, 1993. Disponibile gratuitamente qui': http://pamela.dsi.unifi.it/piluc/",
  "ricevimento": "dalla fine dei corsi soltanto su appuntamento",
  "modalit\u00e0Esame": "null"
}