{
  "nomeCorso": "Linguaggi di programmazione",
  "docente": "Miriam Di Ianni",
  "annoAccademico": "2004-2005",
  "crediti": "6",
  "settore": "",
  "anno": "2",
  "semestre": "1",
  "propedeuticit\u00e0": "Nessuna",
  "comunicazioni": [],
  "lezioni": [],
  "materiale": [],
  "programma": "Parte prima: Caratteristiche dei linguaggi di programmazione\r\nCaratteristiche dei linguaggi di programmazione. \r\nEvoluzione dei linguaggi di programmazione. \r\nSintassi: forma EBNF e diagrammi di sintassi, sintassi astratta e concreta. \r\nInterpretazione e traduzione; il concetto di binding. Variabili: tipo, scope, l-value, r-value. \r\nRoutines, aliasing ed overloading. \r\nSemantica: assiomatica, denotazionale, operazionale. \r\nClassificazione dei linguaggi rispetto alla struttura run-time: tipizzazione statica e dinamica, tecniche di legame dei parametri. \r\nStrutturazione dei dati: tipi built-in e primitivi, dati aggregati, tipi definiti dall'utente e tipi dati astratti. Type systems: program checking statico e dinamico, tipizzazione forte e type checking, compatibilit\u00e0 di tipi, conversioni, tipi e sottotipi, tipi generici, type systems polimorfici. \r\nStrutturazione della computazione: espressioni, ed assegnazioni, istruzioni condizionali e iterative, routines ed effetti collaterali. Eccezioni. Pattern matching. Nondeterminismo e backtracking. Computazioni concorrenti ed event-driven. \r\nStrutturazione del programma: metodi di progetto, concetti di supporto della modularit\u00e0, caratteristiche del linguaggio per la programmazione in the large, unit\u00e0 generiche. \r\nLinguaggi Object-Oriented: concetti di programmazione object-oriented, ereditariet\u00e0, polimorfismo, binding dinamico. \r\n\r\nParte seconda: introduzione al linguaggio Java\r\nIntroduzione al linguaggio Java: programmi, classi, oggetti, applicazioni; metodi e messaggi; information hiding e modificatori di accesso; editing, compilazione ed esecuzione di una applicazione Java. \r\nStruttura di una classe Java: tipi di dato astratti, variabili di istanza e di classe, costruttori, metodi di istanza e di classe. \r\nProgetto di applicazioni Java. \r\nArray, array multidimensionali. \r\nIntroduzione all'ereditariet\u00e0.",
  "testiRiferimento": "Prima parte:\nCarlo Ghezzi, Mehdi Jazayeri, \"Programming Language Concepts\" - Wiley\nSeconda parte:\nDispense del corso. \r\nTesto consigliato: B. Eckel, \"Thinking in Java\" , Apogeo. \r\nVersione inglese\nSupporti per la programmazione in Java:\nhttp://java.sun.com/j2se/1.4.2/download.html (SDK e JRE)\r\nDue classi per eseguire l'input: \r\nInput.class e relativa documentazione, ReadStream.class e relativa documentazione\nUn editore di testo orientato alla sintassi",
  "ricevimento": "",
  "modalit\u00e0Esame": "null"
}