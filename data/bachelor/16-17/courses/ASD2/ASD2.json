{
  "nomeCorso": "Algoritmi e strutture dati 2",
  "docente": "Francesco Pasquale",
  "annoAccademico": "2016-2017",
  "crediti": "6",
  "settore": "INF/01",
  "anno": "3",
  "semestre": "1",
  "propedeuticit\u00e0": "Algoritmi e strutture dati.",
  "comunicazioni": [
    {
      "titolo": "Avviso",
      "data": "16-01-2017 23:13",
      "contenuto": "Il secondo homework \u00e8 disponibile per il download. Consegna entro le ore 9:00 di Marted\u00ec 24 Gennaio 2017."
    },
    {
      "titolo": "Avviso",
      "data": "05-12-2016 23:32",
      "contenuto": "A partire dalla settimana del 12 dicembre, la lezione del luned\u00ec \u00e8 spostata al marted\u00ec. Stessa aula, stessa ora."
    },
    {
      "titolo": "Avviso",
      "data": "20-11-2016 23:17",
      "contenuto": "Il primo homework \u00e8 disponibile per il download. Consegna entro le ore 9:00 di Luned\u00ec 28 Novembre 2016."
    },
    {
      "titolo": "Avviso",
      "data": "27-10-2016 19:10",
      "contenuto": "Luned\u00ec 31 ottobre non c'\u00e8 lezione"
    },
    {
      "titolo": "Avviso",
      "data": "10-10-2016 19:02",
      "contenuto": "Le lezioni iniziano alle ore 9:15"
    },
    {
      "titolo": "Avviso",
      "data": "28-09-2016 12:36",
      "contenuto": "Il corso inizier\u00e0 luned\u00ec 10 ottobre"
    }
  ],
  "lezioni": [
    {
      "id": "26",
      "data": "26-01-2017",
      "contenuto": "Esercitazione. Riepilogo del corso."
    },
    {
      "id": "25",
      "data": "24-01-2017",
      "contenuto": "Risoluzione degli esercizi del compito. Esercitazione."
    },
    {
      "id": "24",
      "data": "19-01-2017",
      "contenuto": "Il metodo dei Multiplicative Weights Update. Esempio: analisi dell'algoritmo Randomized Weighted Majority\u00a0per il problema Regret Minimization. ([5]: Cap. 4.3.2)"
    },
    {
      "id": "23",
      "data": "17-01-2017",
      "contenuto": "Algoritmi online e competitive ratio. Algoritmi che \"imparano\". Esempio: il problema Regret Minimization. Un algoritmo greedy deterministico, un algoritmo greedy probabilistico e il ruolo della randomness. ([5]: Cap. 4.1, 4.2, 4.3.1)"
    },
    {
      "id": "22",
      "data": "12-01-2017",
      "contenuto": "Catene di Markov a stati finiti e tempo discreto e loro utilizzo per l'analisi di algoritmi probabilitstici. Esempio: analisi di un semplice algoritmo probabilistico per 2-SAT. ([3]: Cap. 7.1)"
    },
    {
      "id": "21",
      "data": "10-01-2017",
      "contenuto": "Il World Wide Web e la sua struttura di grafo diretto. Cenni al funzionamento di un motore di ricerca: Crawling, Indexing e il problema del Ranking. Il PageRank e sua formulazione come Random Walk. ([4]: Cap. 13 e 14.3)"
    },
    {
      "id": "20",
      "data": "22-12-2016",
      "contenuto": "Esercitazione"
    },
    {
      "id": "19",
      "data": "20-12-2016",
      "contenuto": "Stimare la deviazione di una variabile aleatoria dal suo valore atteso: Disuguaglianze di Markov, Chebyshev e Chernoff. Esempio: L'algoritmo di ordinamento RandomQuickSort, calcolo del valore atteso del numero di confronti e cenni all'analisi della deviazione dal valore atteso. ([3]: Cap. 2.5 e Esercizio 4.20)"
    },
    {
      "id": "18",
      "data": "15-12-2016",
      "contenuto": "Implementazione in Python di alcuni test di primalit\u00e0: un test deterministico semplice con running time esponenziale, il test probabilistico di Fermat, il test probabilistico di Miller-Rabin. Generare numeri primi di grandi dimensioni."
    },
    {
      "id": "17",
      "data": "13-12-2016",
      "contenuto": "Algoritmi per testare la primalit\u00e0 di un numero. Richiami di teoria dei numeri elementare: teorema di Fermat, radici non banali dell'unit\u00e0. Il test di primalit\u00e0 di Miller-Rabin. ([1]: Cap. 1.3)"
    },
    {
      "id": "16",
      "data": "05-12-2016",
      "contenuto": "Richiami di probabilit\u00e0 discreta: Variabili aleatorie, distribuzioni geometrica e binomiale, valore atteso e linearit\u00e0. Tecniche di analisi del running time di algoritmi probabilistici. ([2]: Cap. 13.3)"
    },
    {
      "id": "15",
      "data": "01-12-2016",
      "contenuto": "Esercitazione."
    },
    {
      "id": "14",
      "data": "28-11-2016",
      "contenuto": "Risoluzione degli esercizi del compito. Riepilogo di probabilit\u00e0 discreta: Spazi di probabilit\u00e0, eventi, probabilit\u00e0 condizionate, indipendenza. Introduzione agli algoritmi probabilistici."
    },
    {
      "id": "13",
      "data": "24-11-2016",
      "contenuto": "I problemi computazionalmente difficili possono essere una risorsa. Esempio: scambiare messaggi in modo sicuro. Richiami di aritmetica modulare, i fondamenti della crittografia a chiave pubblica e il sistema di cifratura RSA. ([1]: Cap. 1.2 e 1.4)"
    },
    {
      "id": "12",
      "data": "21-11-2016",
      "contenuto": "Euristiche di ricerca locale. Esempi: Ricerca locale per Min Vertex Cover e Travelling Salesman Problem. Ricerca locale con fattore di approssimazione garantito. Esempio: Un algoritmo approssimante per Max-Cut([1]: Cap. 9.3, si veda anche [2]: Cap. 12.4)."
    },
    {
      "id": "11",
      "data": "17-11-2016",
      "contenuto": "Un algoritmo 2-approssimante per il problema TSP. Approssimazioni arbitrariamente buone. Esempio: un PTAS (Polynomial-Time Approximation Scheme) per il problema Knapsack ([1]: Cap. 9.2, si veda anche [2]: Cap. 11.8)."
    },
    {
      "id": "10",
      "data": "14-11-2016",
      "contenuto": "Esercitazione."
    },
    {
      "id": "9",
      "data": "10-11-2016",
      "contenuto": "Algoritmi approssimanti per problemi di ottimizzazione NP-hard. Esempi: Un algoritmo greedy 1.5-approssimante per il problema Load Balancing ([2]: Cap. 11.1); un algoritmo 2-approssimante per il problema Min Vertex Cover ([1]: Prima parte Cap. 9.2)"
    },
    {
      "id": "8",
      "data": "07-11-2016",
      "contenuto": "Ricerca esaustiva intelligente. Le tecniche: Backtracking e Branch and Bound. Esempi: Un algoritmo per SAT e un algoritmo per Travelling Salesman Problem ([1]: Cap. 9.1)."
    },
    {
      "id": "7",
      "data": "03-11-2016",
      "contenuto": "Il problema Circuit SAT e sua riduzione polinomiale a SAT. Il concetto di NP-completezza e il teorema di Cook-Levin con cenni di dimostrazione. ([1]: Ultima parte del Cap. 8.3; si veda anche [2]: Cap. 8.3 e 8.4). Introduzione alla ricerca esaustiva intelligente ([1]: Cap. 9.1)."
    },
    {
      "id": "6",
      "data": "27-10-2016",
      "contenuto": "Problemi computazionalmente difficili. La tecnica delle riduzioni polinomiali per valutare la difficolt\u00e0 di un problema relativamente a un altro problema. Esempi: Se esiste un algoritmo polinomiale per 3-SAT allora esiste anche un algoritmo polinomiale per SAT; se esiste un algoritmo polinomiale per Independent Set allora esiste anche un algorimo polinomiale per 3-SAT ([1]: Cap. 8.2 e parte di 8.3)."
    },
    {
      "id": "5",
      "data": "24-10-2016",
      "contenuto": "Esercitazione sulle tecniche algoritmiche."
    },
    {
      "id": "4",
      "data": "20-10-2016",
      "contenuto": "La tecnica della\u00a0Riduzione. Esempio: un algoritmo efficiente per 2-SAT tramite riduzione al problema di trovare le componenti fortemente connesse in un grafo diretto ([1]: Esercizio 3.28). Richiami su grafi diretti, componenti fortemente connesse, DAGs e topological sorting ([1]: Cap. 3.3 e 3.4)"
    },
    {
      "id": "3",
      "data": "17-10-2016",
      "contenuto": "La tecnica della Programmazione Dinamica. Esempio: un algoritmo per il problema Longest Increasing Subsequence ([1]: Cap. 6.1, 6.2)."
    },
    {
      "id": "2",
      "data": "13-10-2016",
      "contenuto": "La tecnica Divide et Impera. Esempio: un algoritmo per moltiplicare due interi di n bit con running time asintoticamente inferiore a n^2. Richiami sulle relazioni di ricorrenza. ([1]: Cap. 1.1, 2.1, 2.2)"
    },
    {
      "id": "1",
      "data": "10-10-2016",
      "contenuto": "Introduzione al corso, descrizione del programma di massima. La tecnica Greedy. Esempio: Un algoritmo greedy per decidere la soddisfacibilit\u00e0 delle formule di Horn ([1]: Cap. 5.3)"
    }
  ],
  "materiale": [
    {
      "titolo": "Si veda la pagina del corso sul sito del docente",
      "dataUpload": "10.10.2016 19:55:31",
      "link": "http://www.informatica.uniroma2.it/upload/2016/ASD2/asd2.html",
      "dimensione": "0 KB"
    }
  ],
  "programma": "Programma provvisorio\n\nPrima parte (4cfu)\n\nProgettare algoritmi efficienti. Riepilogo delle tecniche pi\u00f9 efficaci per progettare algoritmi efficienti: Greedy, Divide et Impera, Programmazione dinamica, Riduzioni polinomiali.\n\nProblemi computazionalmente difficili. La teoria dell'NP-completezza da un punto di vista algoritmico. Affrontare i problemi computazionalmente difficili: ricerca esaustiva intelligente, algoritmi approssimanti, euristiche di ricerca locale.\nAlgoritmi che sfruttano l'esistenza di problemi computazionalmente difficili: il protocollo RSA e i fondamenti della crittografia a chiave pubblica. La matematica dietro le scene: Teoria dei numeri.\n\nAlgoritmi probabilistici. Il ruolo della randomness negli algoritmi. Quando scegliere a caso semplifica gli algoritmi: Test di primalit\u00e0 di Miller-Rabin. Quando scegliere a caso rende gli algoritmi pi\u00f9 efficienti: Packet Routing. Quando poter scegliere a caso \u00e8 indispensabile: Protocolli interattivi e zero-knowledge proofs. Le tecniche per analizzare gli algoritmi probabilistici.\nHashing, il problema dei dizionari. Hashing universale e hashing perfetto. Funzioni hash crittografiche.\n\n\nSeconda parte (2cfu)\n\nLa rapida evoluzione tecnologica degli ultimi decenni ha portato all'ordine del giorno nuove sfide algoritmiche. Nella seconda parte del corso ne studieremo alcune e vedremo come sono state affrontate.\n\nRanking. Le semplici idee algoritmiche che hanno rivoluzionato i motori di ricerca: PageRank e HITS. La matematica dietro le scene: Algebra lineare e catene di Markov.\n\nAlgoritmi che imparano. Expert selection e il meta-algoritmo dei multiplicative updates.\n\nBig Data. Lavorare con grandi quantit\u00e0 di dati. Quando polinomiale non \u00e8 abbastanza efficiente: algoritmi sublineari.",
  "testiRiferimento": "[1] S. Dasgupta, C. Papadimitriou, and U. Vazirani. Algorithms. McGraw-Hill, 2006.\n\n[2] J. Kleinberg and E. Tardos. Algorithm Design. Addison-Wesley, 2005.\n\n\nTesti di supporto\n\n[3] M. Mitzenmacher and E. Upfal. Probability and Computing. Cambridge University Press, 2005.\n\n[4] D. Easley and J. Kleinberg. Networks, Crowds, and Markets. Cambridge University Press, 2010.\n\n[5] N. Nisan, T. Roughgarden, E. Tardos, V. Vazirani (eds.). Algorithmic Game Theory.Cambridge University Press, 2007",
  "ricevimento": "Durante il periodo di svolgimento del corso (Ottobre 2016 - Gennaio 2017):Gioved\u00ec 14:30 - 16:30 oppure su appuntamento. Al di fuori del periodo di svolgimento del corso:Su appuntamento.",
  "modalit\u00e0Esame": "L'esame consiste in una prova scritta e in un colloquio orale.\n\nDurante il corso si effettueranno due prove intermedie sotto forma di homework. Gli studenti che ricevono una valutazione positiva agli homework sono esonerati dalla prova scritta."
}