{
  "nomeCorso": "Laboratorio di sistemi software",
  "docente": "Marco Bianchi",
  "annoAccademico": "2006-2007",
  "crediti": "6",
  "settore": "",
  "anno": "3",
  "semestre": "2",
  "propedeuticit\u00e0": "Nessuna",
  "comunicazioni": [],
  "lezioni": [],
  "materiale": [],
  "programma": "CVS (lezione dell'8 marzo 2007)\r\nIntroduzione al CVS, panoramica delle operazioni di base (init, import, checkout, update, commit, status e log). Tag e branch. Gestione dei conflitti di versione.\r\nIntroduzione al software testing e static white box testing (lezioni del 13 e 15 marzo 2007)\r\nBug, testing, principi e assiomi per il testing, fase di testing come fase di un processo software, test di tipo black \u00adbox e white \u00adbox, testing statico e testing dinamico.\r\nStatic white box testing: sofware Inspection e walkthroughs.\r\nDynamic white box testing: code coverage (lezione del 20 marzo 2007)\r\nCode coverage, control flow graph, statement coverage, decision coverage, condition coverage, decision-\u00adcondition coverage, multiple-\u00adcondition coverage.\r\nTest di copertura del codice con JCoverage (lezione del 22 marzo 2007) \r\nPresentazione del tool JCoverage. Statement e Branch coverage con JCoverage. Report. Impostazione dei \"valori di soglia\". Integrazione di JCoverage con Ant. \r\nGranularit\u00e0 del test e strategie metodologiche (lezione del 29 marzo 2007)\r\nTest di unit\u00e0, test di integrazione e test di sistema. Test in isolamento effettivo con stub, server stubs e mock object. Approcci al test incrementale e non incrementale. Strategie di testing incrementale bottom-up e top-down.\r\nAnt(lezioni del 5 e 10 aprile 2007)\r\nIntroduzione ad Ant, struttura di un generico file build.xml (project, targer, task), installazione di Ant, analisi e test di un file build.xml di base. Sintassi della linea di comando di Ant, aggiunta di informazioni di aiuto nel build file, controllo dell'output a video in Ant, utilizzo delle variabili di ambiente nel build file, utilizzo di proprieta' da linea di comando e da file di propriet\u00e0, definire il CLASSPATH nel build.xml. Introduzione ai directory-based tasks, patterns, fileset, patternset, selectors, selectors containers. Conditional target, esempio di backup con task tar, esempi di backup con task ftp. Utilizzo di ant per il buid e il deploy di un'applicazione web.\r\nJUnit 3.*(lezione del 12 aprile 2007)\r\nAssert, testCase, testSuite e testRunner.\r\nEsempi di utilizzo. \r\nJUnit 4.*(lezione del 17 aprile 2007)\r\nDifferenze tra JUnit 3.* e JUnit 4.*.\r\nEsempi di utilizzo.\r\nMock object(lezione del 19 aprile 2007)\r\nIntroduzione ai mock object, ciclo di vita di un mock, esempi di utilizzo con JMock.\r\nHttpUnit(lezione del 24 aprile 2007)\r\nIntroduzione a HttpUnit, check di una pagina html, navigazione attraverso links, check di una tabella html, test di una form html. Cenni di: esecuzione di test \"da dietro\" un firewall, testare cookies, test di pagine sicure.\r\nJUnitPerf(lezione del 3 maggio 2007)\r\nIntroduzione a JUnitPerf, architettura del tool (pattern decorator), regole per la creazione di un TimedTest e di un LoadTest, test del throughput con condizioni di carico variabile, test del tempo di risposta per un singolo utente in funzione delle condizioni di carico di lavoro del test target.\r\nTest Driven Development (TDD)(lezione dell'8 maggio 2007)\r\nIntroduzione al TDD, esempio di sviluppo TDD. \r\nRefactoring(lezioni del 10 e 15 maggio 2007)\r\nIntroduzione alle tecniche di refactoring, esempio di applicazione delle tecniche di refactoring extract methods, move methods, replace temps with query, replace conditional with polymorphism.\r\nIl processo di Test di una Software Factory(lezione del 17 maggio 2007).\r\nSeminario tenuto dall'ing. Fabio Rabini.\r\nData based black box testing(lezione del 22 maggio 2007).\r\nBoundary value testing: robustness boundary value, worst\u00adcase boundary value, worst\u00adcase robustness. Equivalence partitioning: weak normal variant, strong normal variant, weak robust variant, strong robust variant. Decision table testing. Combinazioni di tecniche. Error Guessing. Random Testing.\r\nCactus(lezione del 24 maggio 2007). \r\nIntroduzione a Cactus, architettura e principi di funzionamento del framework, oggetti impliciti, regole per la scrittura di un test Cactus, file di configurazione di Cactus. Esempi: testare la corretta gestione dei dati inviati da una form a una servlet di autenticazione, testare la sessione di un carrello virtuale. \r\nJMeter(lezione del 29 maggio 2007).\r\nIntroduzione a JMeter, esempi di utilizzo e utilizzo combinato JMeter-JUnitPerf.",
  "testiRiferimento": "The Art of Software Programming\r\nThe Art of Software Testing, Second Edition.\r\nby Glenford J. Myers, Corey Sandler, Tom Badgett, Todd M. Thomas. Wiley (2004).\r\n\r\nSoftware Testing\r\nby Ron Patton. Sams Publishing (2005).\r\n\r\nCVS\r\nOpen Source Development with CVS, 3rd Edition (eBook)\r\nhttp://cvsbook.red-bean.com/ \r\n\r\nJUnit\r\nLa maggior parte del materiale (documentazione e articoli) disponibile on-line e' raggiungibile a partire dal sito di JUnit:\r\nhttp://www.junit.org/\r\nAttenzione alla versione di JUnit a cui si fa riferimento (4.0 vs. 3.8 e precedenti).\r\n\r\nMock objects\r\nUn punto di partenza per lo studio dei mock objects \u00e8 il sito:\r\nhttp://www.mockobjects.com/ \r\nA lezione \u00e8 stato presentato l'esempio:\r\nhttp://www.jmock.org/getting-started.html\r\n\r\nCodice\r\nE' possibile scaricare i sorgenti allegati ai testi consigliati agli indirizzi:\r\nCodice di Java Extreme Programming Cookbook:\r\nhttp://examples.oreilly.com/jextprockbk/\r\n\r\nData based black box testing\r\nFar riferimento al sito http://www.win.tue.nl/~jromijn/2IW30/.\r\nIn particolar modo guardare le slide scaricabili all'indirizzo:\r\nhttp://www.win.tue.nl/~jromijn/2IW30/lecture1.2.narration.zip",
  "ricevimento": "Studio 0221 - II dente, piano terra.\r\nAl citofono digitare 4768.",
  "modalit\u00e0Esame": "null"
}